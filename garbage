
/*

import androidx.annotation.ColorRes
import androidx.annotation.DrawableRes
import androidx.annotation.MenuRes
val appBarSubTitle: Any = 0,
    @MenuRes
    val optionsMenuId: Int = 0,
    @DrawableRes
    val homeIconId: Int = 0,
    @ColorRes
    val statusBarColor: Int = 0,
@ColorRes
val appBarColor: Int = 0,
@ColorRes
val appBarTitleColor: Int = 0,
@DrawableRes
val appWindowBackground: Int = 0,
val homeIconBackPressEnabled: Boolean = true,
@TransitionRes
val enterTransition : Int = 0,
@TransitionRes
val exitTransition : Int = 0
*/


/*
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    implementation 'androidx.databinding:databinding-runtime:7.1.2'
    implementation 'androidx.core:core-ktx:1.7.0'
  implementation 'androidx.appcompat:appcompat:1.4.1'
  implementation 'com.google.android.material:material:1.5.0'
  */



/*
implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
implementation 'androidx.databinding:databinding-runtime:7.1.2'
*/

/*implementation 'androidx.core:core-ktx:1.7.0'
   implementation 'androidx.appcompat:appcompat:1.4.1'
   implementation 'com.google.android.material:material:1.5.0'*/




/*
@PrimaryKey
@RealmField
var key = ONE*/



    <EditText
                style="@style/AppTheme.EditText.Chat"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autofillHints="@null"
                android:hint="@string/hint_chat_message"
                android:inputType="textMultiLine|text" />

            <ImageButton
                style="@style/AppTheme.ImageButton"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical|end"
                android:contentDescription="@null"
                app:srcCompat="@drawable/ic_send_white_24dp" />


                        <androidx.recyclerview.widget.RecyclerView
                            android:id="@+id/rv_message_list"
                            android:layout_width="0dp"
                            android:layout_height="0dp"
                            app:layout_constraintTop_toTopOf="parent"
                            app:layout_constraintStart_toStartOf="parent"
                            app:layout_constraintEnd_toEndOf="parent"
                            app:layout_constraintBottom_toTopOf="@+id/layout_send_message"
                            android:visibility="@{model.listMessages.empty ? View.GONE : View.VISIBLE}"
                            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"
                            bind:eventHandler="@{model.listEventHandler}"
                            bind:items="@{model.listMessages}" />




  ************* MEALS DATA VIEW MODEL ******************************************

           private valcontext = application.applicationContext
           private val repo = MealsRepository()

           fun testJSON() {
               val gson = Gson()
               val json = gson.toJson(repo.m)

               val gsonPretty = GsonBuilder().setPrettyPrinting().create()
               val prettyJson: String = gsonPretty.toJson(json)

               val filename = "meals.json"
               val file = File(context.filesDir, filename)

               file.writeText(prettyJson)
           }

           fun getMealsFromJSON() {
               val filename = "meals.json"
               val file = File(context.filesDir, filename)

               context.openFileInput(filename).bufferedReader().useLines { lines ->
                   lines.fold("") { some, text ->
                       "$some\n$text"
                   }
               }
           }

           fun convertMealsToJSON() {
               val gson = Gson()
               val json = gson.toJson(repo.m)
               val filename = "meals.json"
               val fileContents = "Hello world!"

               val file = File(context.filesDir, filename)

               val fos: FileOutputStream = context.openFileOutput(filename, Context.MODE_PRIVATE)
               fos.write(fileContents.toByteArray())

               context.openFileInput(filename).bufferedReader().useLines { lines ->
                   lines.fold("") { some, text ->
                       "$some\n$text"
                   }
               }
           }


           import android.annotation.SuppressLint
           import android.app.Application
           import android.content.Context
           import androidx.lifecycle.AndroidViewModel
           import com.google.gson.Gson
           import com.google.gson.GsonBuilder
           import com.plataforma.crpg.ui.meals.MealsRepository
           import java.io.File
           import java.io.FileOutputStream



/*
text_opcao_carne.text = mealsViewModel.retrievedMeal.carne
text_opcao_peixe.text = mealsViewModel.retrievedMeal.peixe
text_opcao_dieta.text = mealsViewModel.retrievedMeal.dieta
text_opcao_vegetariano.text = mealsViewModel.retrievedMeal.vegetariano
*/

******   MEALS FRAGMENT    **********************************************

 if (!cardCarne.isChecked) {
    mealsViewModel.selectedOption = 1
} else {
    mealsViewModel.selectedOption = 0
}
cardCarne.isChecked = !cardCarne.isChecked
cardPeixe?.isChecked = false
cardDieta?.isChecked = false
cardVeg?.isChecked = false


/*
if (!cardPeixe.isChecked) {
    mealsViewModel.selectedOption = 2
} else {
    mealsViewModel.selectedOption = 0
}.apply { !cardPeixe.isChecked }
cardCarne?.isChecked = false
cardDieta?.isChecked = false
cardVeg?.isChecked = false


if (!cardDieta.isChecked) {
    mealsViewModel.selectedOption = 3
} else {
    mealsViewModel.selectedOption = 0
}
cardDieta.isChecked = !cardDieta.isChecked
cardCarne?.isChecked = false
cardPeixe?.isChecked = false
cardVeg?.isChecked = false


if (!cardVeg.isChecked) {
    mealsViewModel.selectedOption = 4
} else {
    mealsViewModel.selectedOption = 0
}
cardVeg.isChecked = !cardVeg.isChecked
cardCarne?.isChecked = false
cardPeixe?.isChecked = false
cardDieta?.isChecked = false
*/
